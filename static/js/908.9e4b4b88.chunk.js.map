{"version":3,"file":"static/js/908.9e4b4b88.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HomeStyled = styled.section`\n  padding: 30px 0 50px;\n  h1 {\n    font-size: 30px;\n  }\n`;\n","export const selectContacts = state => state.contacts;\n\nexport const selectFilteredContacts = state => {\n  const contacts = state.contacts.items;\n  const filter = state.filter.val;\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactFormStyled = styled.form`\n  display: flex;\n  margin: 20px 0;\n  flex-direction: column;\n  gap: 20px;\n\n  label {\n    width: 100%;\n    font-size: 16px;\n    color: var(--accent);\n    margin-right: 20px;\n  }\n\n  input {\n    width: 100%;\n    height: 32px;\n    padding: 0 10px;\n    border: 2px solid var(--accent);\n    border-radius: 4px;\n    outline: none;\n    color: var(--title);\n    transition: border-color 250ms linear;\n    :hover,\n    :focus {\n      border-color: var(--title);\n    }\n  }\n\n  button {\n    margin-left: auto;\n    width: 150px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { ContactFormStyled } from './ContactForm.styled';\nimport { ButtonStyled } from 'styles/Button.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = e.target.elements;\n    if (\n      contacts.length > 0 &&\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.value.toLowerCase()\n      )\n    ) {\n      Notify.info(`${name.value} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name: name.value, phone: phone.value }));\n      e.target.reset();\n    }\n  };\n\n  return (\n    <ContactFormStyled onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"phone\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <ButtonStyled type=\"submit\">Add contact</ButtonStyled>\n    </ContactFormStyled>\n  );\n};\n","import { FiTrash2 } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport { mediaQueries } from 'styles/mediaQueries';\n\nexport const ContactStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n\n  ${mediaQueries('tablet')`animation: scale 400ms linear;`}\n\n  div {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    ${mediaQueries('desktop')`\n    max-width: 550px;\n    flex-direction: row;\n    flex-grow: 1;\njustify-content: space-between;`}\n\n    h3 {\n      color: var(--accent);\n    }\n\n    a {\n      font-size: 18px;\n      font-weight: 500;\n      color: var(--title);\n      transition: color 250ms linear;\n      :hover,\n      :focus {\n        color: var(--accent);\n      }\n    }\n  }\n\n  button {\n    background-color: transparent;\n    border: none;\n    :hover\n    {cursor: pointer;\n  }\n`;\n\nexport const TrashIcon = styled(FiTrash2)`\n  width: 24px;\n  height: 24px;\n  color: var(--title);\n  :hover {color: var(--accent);}\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactStyled, TrashIcon } from './Contact.styled';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { name, phone } = contact;\n\n  return (\n    <ContactStyled>\n      <div>\n        <h3>{name}</h3>\n        <a href={`tel:${phone}`}>{phone}</a>\n      </div>\n      <button onClick={() => dispatch(deleteContact(contact._id))}>\n        <TrashIcon />\n      </button>\n    </ContactStyled>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  display: flex;\n  padding: 20px 0 40px;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectFilteredContacts,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport { ContactListStyled } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(selectContacts);\n  const contacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  error && Notify.failure(`${error}`);\n\n  return (\n    <>\n      <ContactListStyled>\n        {contacts.map(contact => {\n          return (\n            <li key={contact._id}>\n              <Contact contact={contact} />\n            </li>\n          );\n        })}\n      </ContactListStyled>\n      {isLoading && <Loader />}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { mediaQueries } from 'styles/mediaQueries';\n\nexport const FilterStyled = styled.section`\n  margin: 20px 0 10px;\n\n  label {\n    width: 100%;\n    font-size: 16px;\n    color: var(--accent);\n  }\n\n  input {\n    width: 100%;\n    height: 32px;\n    border: 2px solid var(--accent);\n    border-radius: 4px;\n    outline: none;\n    color: var(--title);\n    transition: border-color 250ms linear;\n    ${mediaQueries('tablet')`\n    display: block;\n    width: 250px;`}\n\n    :hover, :focus {\n      border-color: var(--title);\n    }\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FilterStyled } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    e.preventDefault();\n    const val = e.target.value.toLowerCase();\n    dispatch(setFilter(val));\n  };\n\n  return (\n    <FilterStyled>\n      <label htmlFor=\"filter\">\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$}\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handleChange}\n        />\n      </label>\n    </FilterStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { mediaQueries } from 'styles/mediaQueries';\n\nexport const ContactsStyled = styled.div`\n  ${mediaQueries('tablet')`display: flex;\n  justify-content: space-between;\n  div:nth-child(2) {flex-grow: 1;\nmax-width: 50%;}\n  `}\n  ${mediaQueries('desktop')`div:nth-child(2) {max-width: 65%;}`}\n`;\n","import { ContactForm } from '../ContactForm/ContactForm';\nimport { ContactList } from '../ContactList/ContactList';\nimport { Filter } from '../Filter/Filter';\nimport { ContactsStyled } from './Contacts.styled';\n\nexport const Contacts = () => {\n  return (\n    <ContactsStyled>\n      <div>\n        <h2>Add contact</h2>\n        <ContactForm />\n      </div>\n      <div>\n        <h2>Your contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </ContactsStyled>\n  );\n};\n","import { Container } from 'components/Container/Container';\nimport { HomeStyled } from './Home.styled';\nimport { useAuth } from 'hooks/useAuth';\nimport { Contacts } from 'components/Contacts/Contacts';\n\nexport default function Home() {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <HomeStyled>\n      <Container>\n        {!isLoggedIn ? (\n          <h1>Please, regist or log in to start working with your contacts!</h1>\n        ) : (\n          <Contacts />\n        )}\n      </Container>\n    </HomeStyled>\n  );\n}\n"],"names":["HomeStyled","styled","selectContacts","state","contacts","selectFilteredContacts","items","filter","val","contact","name","toLowerCase","includes","ContactFormStyled","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","target","elements","phone","length","find","value","Notify","addContact","reset","htmlFor","type","title","required","ContactStyled","mediaQueries","TrashIcon","FiTrash2","Contact","href","onClick","deleteContact","_id","ContactListStyled","ContactList","isLoading","error","useEffect","fetchContacts","map","Loader","FilterStyled","Filter","pattern","onChange","setFilter","ContactsStyled","Contacts","Home","isLoggedIn","useAuth","Container"],"sourceRoot":""}